root
└── indi.yuluo.graalvm.DemoApplication#main(java.lang.String[])
    └── org.springframework.boot.SpringApplication#run(java.lang.Class,java.lang.String[])
        └── org.springframework.boot.SpringApplication#run(java.lang.Class[],java.lang.String[])
            ├── org.springframework.boot.SpringApplication#<init>(java.lang.Class[])
            │   └── org.springframework.boot.SpringApplication#<init>(org.springframework.core.io.ResourceLoader,java.lang.Class[])
            │       └── org.springframework.boot.SpringApplication#getSpringFactoriesInstances(java.lang.Class)
            │           └── org.springframework.boot.SpringApplication#getSpringFactoriesInstances(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
            │               └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
            │                   └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
            │                       └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
            │                           ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
            │                           │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.logging.NacosLoggingListener" } ]
            │                           ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
            │                           │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.logging.NacosLoggingListener",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
            │                           └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
            │                               └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
            │                                   └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.logging.NacosLoggingListener",   "queryAllPublicConstructors":true } ]
            └── org.springframework.boot.SpringApplication#run(java.lang.String[])
                ├── org.springframework.boot.SpringApplication#refreshContext(org.springframework.context.ConfigurableApplicationContext)
                │   └── org.springframework.boot.SpringApplication#refresh(org.springframework.context.ConfigurableApplicationContext)
                │       └── org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext#refresh()
                │           └── org.springframework.context.support.AbstractApplicationContext#refresh()
                │               ├── org.springframework.context.support.AbstractApplicationContext#finishBeanFactoryInitialization(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
                │               │   └── org.springframework.beans.factory.support.DefaultListableBeanFactory#preInstantiateSingletons()
                │               │       ├── org.springframework.beans.factory.support.AbstractBeanFactory#getBean(java.lang.String)
                │               │       │   └── org.springframework.beans.factory.support.AbstractBeanFactory#doGetBean(java.lang.String,java.lang.Class,java.lang.Object[],boolean)
                │               │       │       └── org.springframework.beans.factory.support.DefaultSingletonBeanRegistry#getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)
                │               │       │           └── org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$374/0x0000000800faf660#getObject()
                │               │       │               └── org.springframework.beans.factory.support.AbstractBeanFactory#lambda$doGetBean$0(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                   └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#createBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                       └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                           ├── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#initializeBean(java.lang.String,java.lang.Object,org.springframework.beans.factory.support.RootBeanDefinition)
                │               │       │                           │   └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyBeanPostProcessorsBeforeInitialization(java.lang.Object,java.lang.String)
                │               │       │                           │       ├── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor#postProcessBeforeInitialization(java.lang.Object,java.lang.String)
                │               │       │                           │       │   └── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata#invokeInitMethods(java.lang.Object,java.lang.String)
                │               │       │                           │       │       └── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement#invoke(java.lang.Object)
                │               │       │                           │       │           └── java.lang.reflect.Method#invoke(java.lang.Object,java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"init","parameterTypes":[] }] } ]
                │               │       │                           │       └── org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor#postProcessBeforeInitialization(java.lang.Object,java.lang.String)
                │               │       │                           │           └── org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor#bind(org.springframework.boot.context.properties.ConfigurationPropertiesBean)
                │               │       │                           │               └── org.springframework.boot.context.properties.ConfigurationPropertiesBinder#bind(org.springframework.boot.context.properties.ConfigurationPropertiesBean)
                │               │       │                           │                   └── org.springframework.boot.context.properties.bind.Binder#bind(java.lang.String,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                │               │       │                           │                       └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                │               │       │                           │                           └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,boolean)
                │               │       │                           │                               └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                │               │       │                           │                                   └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                │               │       │                           │                                       └── org.springframework.boot.context.properties.bind.Binder#bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                │               │       │                           │                                           └── org.springframework.boot.context.properties.bind.Binder$Context#withDataObject(java.lang.Class,java.util.function.Supplier)
                │               │       │                           │                                               └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                │               │       │                           │                                                   └── org.springframework.boot.context.properties.bind.Binder$$Lambda$117/0x0000000800cb79f8#get()
                │               │       │                           │                                                       └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$5(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                │               │       │                           │                                                           ├── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                │               │       │                           │                                                           │   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#get(org.springframework.boot.context.properties.bind.Bindable,boolean)
                │               │       │                           │                                                           │   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#<init>(org.springframework.core.ResolvableType,java.lang.Class)
                │               │       │                           │                                                           │   │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#addProperties(java.lang.Class)
                │               │       │                           │                                                           │   │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getSorted(java.lang.Object,java.util.function.Function,java.util.function.Function)
                │               │       │                           │                                                           │   │               ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$123/0x0000000800cbd2f0#apply(java.lang.Object)
                │               │       │                           │                                                           │   │               │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getDeclaredMethods(java.lang.Class)
                │               │       │                           │                                                           │   │               │       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredMethods":true } ]
                │               │       │                           │                                                           │   │               └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$125/0x0000000800cbd968#apply(java.lang.Object)
                │               │       │                           │                                                           │   │                   └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "allDeclaredFields":true } ]
                │               │       │                           │                                                           │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.Binder$Context)
                │               │       │                           │                                                           │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty)
                │               │       │                           │                                                           │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty#setValue(java.util.function.Supplier,java.lang.Object)
                │               │       │                           │                                                           │               └── java.lang.reflect.Method#invoke(java.lang.Object,java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"setServerAddr","parameterTypes":["java.lang.String"] }] } ]
                │               │       │                           │                                                           └── org.springframework.boot.context.properties.bind.ValueObjectBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                │               │       │                           │                                                               └── org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject#get(org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context)
                │               │       │                           │                                                                   └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(org.springframework.boot.context.properties.bind.Bindable,boolean)
                │               │       │                           │                                                                       └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(java.lang.Class,boolean)
                │               │       │                           │                                                                           └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getConstructors(java.lang.Class)
                │               │       │                           │                                                                               ├── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getCandidateConstructors(java.lang.Class)
                │               │       │                           │                                                                               │   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                │               │       │                           │                                                                               └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#isAutowiredPresent(java.lang.Class)
                │               │       │                           │                                                                                   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                │               │       │                           ├── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#applyMergedBeanDefinitionPostProcessors(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)
                │               │       │                           │   └── org.springframework.context.annotation.CommonAnnotationBeanPostProcessor#postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)
                │               │       │                           │       ├── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor#postProcessMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class,java.lang.String)
                │               │       │                           │       │   └── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor#findInjectionMetadata(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class)
                │               │       │                           │       │       └── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor#findLifecycleMetadata(java.lang.Class)
                │               │       │                           │       │           └── org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor#buildLifecycleMetadata(java.lang.Class)
                │               │       │                           │       │               └── org.springframework.util.ReflectionUtils#doWithLocalMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback)
                │               │       │                           │       │                   └── org.springframework.util.ReflectionUtils#getDeclaredMethods(java.lang.Class,boolean)
                │               │       │                           │       │                       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigManager",   "queryAllDeclaredMethods":true }, {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredMethods":true }, {   "name":"com.alibaba.cloud.nacos.refresh.NacosContextRefresher",   "queryAllDeclaredMethods":true }, {   "name":"com.alibaba.cloud.nacos.refresh.NacosRefreshHistory",   "queryAllDeclaredMethods":true } ]
                │               │       │                           │       └── org.springframework.context.annotation.CommonAnnotationBeanPostProcessor#findResourceMetadata(java.lang.String,java.lang.Class,org.springframework.beans.PropertyValues)
                │               │       │                           │           └── org.springframework.context.annotation.CommonAnnotationBeanPostProcessor#buildResourceMetadata(java.lang.Class)
                │               │       │                           │               └── org.springframework.util.ReflectionUtils#doWithLocalFields(java.lang.Class,org.springframework.util.ReflectionUtils$FieldCallback)
                │               │       │                           │                   └── org.springframework.util.ReflectionUtils#getDeclaredFields(java.lang.Class)
                │               │       │                           │                       └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "allDeclaredFields":true }, {   "name":"com.alibaba.cloud.nacos.NacosConfigManager",   "allDeclaredFields":true }, {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "allDeclaredFields":true }, {   "name":"com.alibaba.cloud.nacos.refresh.NacosContextRefresher",   "allDeclaredFields":true }, {   "name":"com.alibaba.cloud.nacos.refresh.NacosRefreshHistory",   "allDeclaredFields":true } ]
                │               │       │                           └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#createBeanInstance(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                               ├── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#instantiateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)
                │               │       │                               │   └── org.springframework.beans.factory.support.SimpleInstantiationStrategy#instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory)
                │               │       │                               │       ├── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                │               │       │                               │       └── org.springframework.beans.BeanUtils#instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])
                │               │       │                               │           └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                │               │       │                               ├── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#determineConstructorsFromBeanPostProcessors(java.lang.Class,java.lang.String)
                │               │       │                               │   └── org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor#determineCandidateConstructors(java.lang.Class,java.lang.String)
                │               │       │                               │       └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "queryAllDeclaredConstructors":true } ]
                │               │       │                               └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                                   └── org.springframework.beans.factory.support.ConstructorResolver#instantiateUsingFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])
                │               │       │                                       └── org.springframework.beans.factory.support.ConstructorResolver#instantiate(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
                │               │       │                                           └── org.springframework.beans.factory.support.SimpleInstantiationStrategy#instantiate(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,org.springframework.beans.factory.BeanFactory,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
                │               │       │                                               └── java.lang.reflect.Method#invoke(java.lang.Object,java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "methods":[     {"name":"nacosConfigManager","parameterTypes":["com.alibaba.cloud.nacos.NacosConfigProperties"] },      {"name":"nacosConfigProperties","parameterTypes":["org.springframework.context.ApplicationContext"] },      {"name":"nacosContextRefresher","parameterTypes":["com.alibaba.cloud.nacos.NacosConfigManager","com.alibaba.cloud.nacos.refresh.NacosRefreshHistory"] },      {"name":"nacosRefreshHistory","parameterTypes":[] }   ] } ]
                │               │       └── org.springframework.context.event.EventListenerMethodProcessor#afterSingletonsInstantiated()
                │               │           └── org.springframework.context.event.EventListenerMethodProcessor#processBean(java.lang.String,java.lang.Class)
                │               │               └── org.springframework.core.MethodIntrospector#selectMethods(java.lang.Class,org.springframework.core.MethodIntrospector$MetadataLookup)
                │               │                   └── org.springframework.util.ReflectionUtils#doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)
                │               │                       └── org.springframework.core.MethodIntrospector$$Lambda$670/0x00000008010fb050#doWith(java.lang.reflect.Method)
                │               │                           └── org.springframework.core.MethodIntrospector#lambda$selectMethods$0(java.lang.Class,org.springframework.core.MethodIntrospector$MetadataLookup,java.util.Map,java.lang.reflect.Method)
                │               │                               └── org.springframework.util.ClassUtils#getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)
                │               │                                   └── java.lang.Class#getMethod(java.lang.String,java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.refresh.NacosContextRefresher",   "methods":[     {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] },      {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }   ] } ]
                │               └── org.springframework.context.support.AbstractApplicationContext#invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
                │                   └── org.springframework.context.support.PostProcessorRegistrationDelegate#invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List)
                │                       ├── org.springframework.context.support.PostProcessorRegistrationDelegate#invokeBeanDefinitionRegistryPostProcessors(java.util.Collection,org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.core.metrics.ApplicationStartup)
                │                       │   └── org.springframework.context.annotation.ConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)
                │                       │       └── org.springframework.context.annotation.ConfigurationClassPostProcessor#processConfigBeanDefinitions(org.springframework.beans.factory.support.BeanDefinitionRegistry)
                │                       │           ├── org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitions(java.util.Set)
                │                       │           │   └── org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForConfigurationClass(org.springframework.context.annotation.ConfigurationClass,org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator)
                │                       │           │       └── org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod(org.springframework.context.annotation.BeanMethod)
                │                       │           │           └── org.springframework.context.annotation.ConditionEvaluator#shouldSkip(org.springframework.core.type.AnnotatedTypeMetadata,org.springframework.context.annotation.ConfigurationCondition$ConfigurationPhase)
                │                       │           │               ├── org.springframework.boot.autoconfigure.condition.SpringBootCondition#matches(org.springframework.context.annotation.ConditionContext,org.springframework.core.type.AnnotatedTypeMetadata)
                │                       │           │               │   └── org.springframework.boot.autoconfigure.condition.OnBeanCondition#getMatchOutcome(org.springframework.context.annotation.ConditionContext,org.springframework.core.type.AnnotatedTypeMetadata)
                │                       │           │               │       └── org.springframework.boot.autoconfigure.condition.OnBeanCondition#getMatchingBeans(org.springframework.context.annotation.ConditionContext,org.springframework.boot.autoconfigure.condition.OnBeanCondition$Spec)
                │                       │           │               │           └── org.springframework.boot.autoconfigure.condition.OnBeanCondition#getBeanNamesForType(java.lang.ClassLoader,boolean,org.springframework.beans.factory.ListableBeanFactory,java.lang.String,java.util.Set)
                │                       │           │               │               ├── org.springframework.boot.autoconfigure.condition.OnBeanCondition#getBeanNamesForType(org.springframework.beans.factory.ListableBeanFactory,boolean,java.lang.Class,java.util.Set)
                │                       │           │               │               │   └── org.springframework.boot.autoconfigure.condition.OnBeanCondition#collectBeanNamesForType(org.springframework.beans.factory.ListableBeanFactory,boolean,java.lang.Class,java.util.Set,java.util.Set)
                │                       │           │               │               │       └── org.springframework.beans.factory.support.DefaultListableBeanFactory#getBeanNamesForType(java.lang.Class,boolean,boolean)
                │                       │           │               │               │           └── org.springframework.beans.factory.support.DefaultListableBeanFactory#doGetBeanNamesForType(org.springframework.core.ResolvableType,boolean,boolean)
                │                       │           │               │               │               └── org.springframework.beans.factory.support.AbstractBeanFactory#isFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)
                │                       │           │               │               │                   └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#predictBeanType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])
                │                       │           │               │               │                       └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#determineTargetType(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])
                │                       │           │               │               │                           ├── org.springframework.beans.factory.support.AbstractBeanFactory#resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String,java.lang.Class[])
                │                       │           │               │               │                           │   └── org.springframework.beans.factory.support.AbstractBeanFactory#doResolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])
                │                       │           │               │               │                           │       └── org.springframework.beans.factory.support.AbstractBeanDefinition#resolveBeanClass(java.lang.ClassLoader)
                │                       │           │               │               │                           │           └── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                │                       │           │               │               │                           │               └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration" } ]
                │                       │           │               │               │                           └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])
                │                       │           │               │               │                               └── java.util.concurrent.ConcurrentHashMap#computeIfAbsent(java.lang.Object,java.util.function.Function)
                │                       │           │               │               │                                   └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$$Lambda$435/0x0000000800fefab8#apply(java.lang.Object)
                │                       │           │               │               │                                       └── org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory#lambda$getTypeForFactoryMethod$1(java.lang.Class)
                │                       │           │               │               │                                           └── org.springframework.util.ReflectionUtils#getUniqueDeclaredMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodFilter)
                │                       │           │               │               │                                               └── org.springframework.util.ReflectionUtils#doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)
                │                       │           │               │               │                                                   └── org.springframework.util.ReflectionUtils#getDeclaredMethods(java.lang.Class,boolean)
                │                       │           │               │               │                                                       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration",   "queryAllDeclaredMethods":true } ]
                │                       │           │               │               └── org.springframework.boot.autoconfigure.condition.FilteringSpringBootCondition#resolve(java.lang.String,java.lang.ClassLoader)
                │                       │           │               │                   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties" } ]
                │                       │           │               └── org.springframework.context.annotation.ConditionEvaluator#getCondition(java.lang.String,java.lang.ClassLoader)
                │                       │           │                   ├── org.springframework.beans.BeanUtils#instantiateClass(java.lang.Class)
                │                       │           │                   │   ├── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.refresh.condition.NonDefaultBehaviorCondition",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                │                       │           │                   │   └── org.springframework.beans.BeanUtils#instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])
                │                       │           │                   │       └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.refresh.condition.NonDefaultBehaviorCondition",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                │                       │           │                   └── org.springframework.util.ClassUtils#resolveClassName(java.lang.String,java.lang.ClassLoader)
                │                       │           │                       └── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                │                       │           │                           └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.refresh.condition.NonDefaultBehaviorCondition" } ]
                │                       │           └── org.springframework.context.annotation.ConfigurationClassParser#parse(java.util.Set)
                │                       │               └── org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler#process()
                │                       │                   └── org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler#processGroupImports()
                │                       │                       └── org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGrouping#getImports()
                │                       │                           └── org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup#selectImports()
                │                       │                               └── org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup#sortAutoConfigurations(java.util.Set,org.springframework.boot.autoconfigure.AutoConfigurationMetadata)
                │                       │                                   └── org.springframework.boot.autoconfigure.AutoConfigurationSorter#getInPriorityOrder(java.util.Collection)
                │                       │                                       └── org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClasses#<init>(org.springframework.core.type.classreading.MetadataReaderFactory,org.springframework.boot.autoconfigure.AutoConfigurationMetadata,java.util.Collection)
                │                       │                                           └── org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClasses#addToClasses(org.springframework.core.type.classreading.MetadataReaderFactory,org.springframework.boot.autoconfigure.AutoConfigurationMetadata,java.util.Collection,boolean)
                │                       │                                               └── org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass#isAvailable()
                │                       │                                                   └── org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass#getAnnotationMetadata()
                │                       │                                                       └── org.springframework.core.type.classreading.SimpleMetadataReaderFactory#getMetadataReader(java.lang.String)
                │                       │                                                           └── org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory#getMetadataReader(org.springframework.core.io.Resource)
                │                       │                                                               └── org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory#createMetadataReader(org.springframework.core.io.Resource)
                │                       │                                                                   └── org.springframework.core.type.classreading.SimpleMetadataReaderFactory#getMetadataReader(org.springframework.core.io.Resource)
                │                       │                                                                       └── org.springframework.core.type.classreading.SimpleMetadataReader#<init>(org.springframework.core.io.Resource,java.lang.ClassLoader)
                │                       │                                                                           └── org.springframework.asm.ClassReader#accept(org.springframework.asm.ClassVisitor,int)
                │                       │                                                                               └── org.springframework.asm.ClassReader#accept(org.springframework.asm.ClassVisitor,org.springframework.asm.Attribute[],int)
                │                       │                                                                                   └── org.springframework.asm.ClassReader#readMethod(org.springframework.asm.ClassVisitor,org.springframework.asm.Context,int)
                │                       │                                                                                       ├── org.springframework.asm.ClassReader#readElementValues(org.springframework.asm.AnnotationVisitor,int,boolean,char[])
                │                       │                                                                                       │   └── org.springframework.core.type.classreading.MergedAnnotationReadingVisitor#visitEnd()
                │                       │                                                                                       │       └── org.springframework.core.annotation.MergedAnnotation#of(java.lang.ClassLoader,java.lang.Object,java.lang.Class,java.util.Map)
                │                       │                                                                                       │           └── org.springframework.core.annotation.TypeMappedAnnotation#of(java.lang.ClassLoader,java.lang.Object,java.lang.Class,java.util.Map)
                │                       │                                                                                       │               └── org.springframework.core.annotation.AnnotationTypeMappings#forAnnotationType(java.lang.Class)
                │                       │                                                                                       │                   └── org.springframework.core.annotation.AnnotationTypeMappings#forAnnotationType(java.lang.Class,org.springframework.core.annotation.AnnotationFilter)
                │                       │                                                                                       │                       └── org.springframework.core.annotation.AnnotationTypeMappings#forAnnotationType(java.lang.Class,org.springframework.core.annotation.RepeatableContainers,org.springframework.core.annotation.AnnotationFilter)
                │                       │                                                                                       │                           └── org.springframework.core.annotation.AnnotationTypeMappings$Cache#get(java.lang.Class)
                │                       │                                                                                       │                               └── java.util.concurrent.ConcurrentMap#computeIfAbsent(java.lang.Object,java.util.function.Function)
                │                       │                                                                                       │                                   └── org.springframework.core.annotation.AnnotationTypeMappings$Cache$$Lambda$70/0x0000000800c82d50#apply(java.lang.Object)
                │                       │                                                                                       │                                       └── org.springframework.core.annotation.AnnotationTypeMappings$Cache#createMappings(java.lang.Class)
                │                       │                                                                                       │                                           └── org.springframework.core.annotation.AnnotationTypeMappings#<init>(org.springframework.core.annotation.RepeatableContainers,org.springframework.core.annotation.AnnotationFilter,java.lang.Class)
                │                       │                                                                                       │                                               └── org.springframework.core.annotation.AnnotationTypeMappings#addAllMappings(java.lang.Class)
                │                       │                                                                                       │                                                   └── org.springframework.core.annotation.AnnotationTypeMappings#addIfPossible(java.util.Deque,org.springframework.core.annotation.AnnotationTypeMapping,java.lang.Class,java.lang.annotation.Annotation)
                │                       │                                                                                       │                                                       └── org.springframework.core.annotation.AnnotationTypeMapping#<init>(org.springframework.core.annotation.AnnotationTypeMapping,java.lang.Class,java.lang.annotation.Annotation)
                │                       │                                                                                       │                                                           └── org.springframework.core.annotation.AttributeMethods#forAnnotationType(java.lang.Class)
                │                       │                                                                                       │                                                               └── java.util.concurrent.ConcurrentMap#computeIfAbsent(java.lang.Object,java.util.function.Function)
                │                       │                                                                                       │                                                                   └── org.springframework.core.annotation.AttributeMethods$$Lambda$67/0x0000000800c87828#apply(java.lang.Object)
                │                       │                                                                                       │                                                                       └── org.springframework.core.annotation.AttributeMethods#compute(java.lang.Class)
                │                       │                                                                                       │                                                                           └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.refresh.condition.ConditionalOnNonDefaultBehavior",   "queryAllDeclaredMethods":true } ]
                │                       │                                                                                       └── org.springframework.core.type.classreading.SimpleMethodMetadataReadingVisitor#visitAnnotation(java.lang.String,boolean)
                │                       │                                                                                           └── org.springframework.core.type.classreading.MergedAnnotationReadingVisitor#get(java.lang.ClassLoader,java.lang.Object,java.lang.String,boolean,java.util.function.Consumer)
                │                       │                                                                                               └── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                │                       │                                                                                                   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.refresh.condition.ConditionalOnNonDefaultBehavior" } ]
                │                       └── org.springframework.context.support.PostProcessorRegistrationDelegate#invokeBeanFactoryPostProcessors(java.util.Collection,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
                │                           └── org.springframework.context.annotation.ConfigurationClassPostProcessor#postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
                │                               └── org.springframework.context.annotation.ConfigurationClassPostProcessor#enhanceConfigurationClasses(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
                │                                   └── org.springframework.beans.factory.support.AbstractBeanDefinition#resolveBeanClass(java.lang.ClassLoader)
                │                                       └── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                │                                           └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigAutoConfiguration" } ]
                └── org.springframework.boot.SpringApplication#prepareEnvironment(org.springframework.boot.SpringApplicationRunListeners,org.springframework.boot.DefaultBootstrapContext,org.springframework.boot.ApplicationArguments)
                    └── org.springframework.boot.SpringApplicationRunListeners#environmentPrepared(org.springframework.boot.ConfigurableBootstrapContext,org.springframework.core.env.ConfigurableEnvironment)
                        └── org.springframework.boot.SpringApplicationRunListeners#doWithListeners(java.lang.String,java.util.function.Consumer)
                            └── org.springframework.boot.SpringApplicationRunListeners#doWithListeners(java.lang.String,java.util.function.Consumer,java.util.function.Consumer)
                                └── java.lang.Iterable#forEach(java.util.function.Consumer)
                                    └── org.springframework.boot.SpringApplicationRunListeners$$Lambda$91/0x0000000800ca5dc8#accept(java.lang.Object)
                                        └── org.springframework.boot.SpringApplicationRunListeners#lambda$environmentPrepared$2(org.springframework.boot.ConfigurableBootstrapContext,org.springframework.core.env.ConfigurableEnvironment,org.springframework.boot.SpringApplicationRunListener)
                                            └── org.springframework.boot.context.event.EventPublishingRunListener#environmentPrepared(org.springframework.boot.ConfigurableBootstrapContext,org.springframework.core.env.ConfigurableEnvironment)
                                                └── org.springframework.boot.context.event.EventPublishingRunListener#multicastInitialEvent(org.springframework.context.ApplicationEvent)
                                                    └── org.springframework.context.event.SimpleApplicationEventMulticaster#multicastEvent(org.springframework.context.ApplicationEvent)
                                                        └── org.springframework.context.event.SimpleApplicationEventMulticaster#multicastEvent(org.springframework.context.ApplicationEvent,org.springframework.core.ResolvableType)
                                                            └── org.springframework.context.event.SimpleApplicationEventMulticaster#invokeListener(org.springframework.context.ApplicationListener,org.springframework.context.ApplicationEvent)
                                                                └── org.springframework.context.event.SimpleApplicationEventMulticaster#doInvokeListener(org.springframework.context.ApplicationListener,org.springframework.context.ApplicationEvent)
                                                                    └── org.springframework.boot.env.EnvironmentPostProcessorApplicationListener#onApplicationEvent(org.springframework.context.ApplicationEvent)
                                                                        └── org.springframework.boot.env.EnvironmentPostProcessorApplicationListener#onApplicationEnvironmentPreparedEvent(org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent)
                                                                            ├── org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor#postProcessEnvironment(org.springframework.core.env.ConfigurableEnvironment,org.springframework.boot.SpringApplication)
                                                                            │   └── org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor#postProcessEnvironment(org.springframework.core.env.ConfigurableEnvironment,org.springframework.core.io.ResourceLoader,java.util.Collection)
                                                                            │       ├── org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor#getConfigDataEnvironment(org.springframework.core.env.ConfigurableEnvironment,org.springframework.core.io.ResourceLoader,java.util.Collection)
                                                                            │       │   └── org.springframework.boot.context.config.ConfigDataEnvironment#<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.core.env.ConfigurableEnvironment,org.springframework.core.io.ResourceLoader,java.util.Collection,org.springframework.boot.context.config.ConfigDataEnvironmentUpdateListener)
                                                                            │       │       ├── org.springframework.boot.context.config.ConfigDataEnvironment#createConfigDataLocationResolvers(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader)
                                                                            │       │       │   └── org.springframework.boot.context.config.ConfigDataLocationResolvers#<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader,org.springframework.core.io.support.SpringFactoriesLoader)
                                                                            │       │       │       └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │       │       │           └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │       │               └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │       │                   ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                                                                            │       │       │                   │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver" } ]
                                                                            │       │       │                   ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │       │       │                   │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver",   "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }] } ]
                                                                            │       │       │                   │       └── java.lang.reflect.Constructor#newInstanceWithCaller(java.lang.Object[],boolean,java.lang.Class)
                                                                            │       │       │                   │           └── jdk.internal.reflect.DelegatingConstructorAccessorImpl#newInstance(java.lang.Object[])
                                                                            │       │       │                   │               └── jdk.internal.reflect.NativeConstructorAccessorImpl#newInstance(java.lang.Object[])
                                                                            │       │       │                   │                   └── jdk.internal.reflect.NativeConstructorAccessorImpl#newInstance0(java.lang.reflect.Constructor,java.lang.Object[])
                                                                            │       │       │                   │                       └── org.springframework.boot.context.config.StandardConfigDataLocationResolver#<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader)
                                                                            │       │       │                   │                           └── org.springframework.core.io.support.SpringFactoriesLoader#loadFactories(java.lang.Class,java.lang.ClassLoader)
                                                                            │       │       │                   │                               └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class)
                                                                            │       │       │                   │                                   └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │       │                   │                                       └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │       │                   │                                           ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                                                                            │       │       │                   │                                           │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader" }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader" } ]
                                                                            │       │       │                   │                                           ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │       │       │                   │                                           │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader",   "methods":[{"name":"<init>","parameterTypes":[] }] }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │       │       │                   │                                           └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
                                                                            │       │       │                   │                                               └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
                                                                            │       │       │                   │                                                   └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader",   "queryAllPublicConstructors":true }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader",   "queryAllPublicConstructors":true } ]
                                                                            │       │       │                   └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
                                                                            │       │       │                       └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
                                                                            │       │       │                           └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver",   "queryAllPublicConstructors":true } ]
                                                                            │       │       └── org.springframework.boot.context.config.ConfigDataLoaders#<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.core.io.support.SpringFactoriesLoader)
                                                                            │       │           └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │       │               └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │                   └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │       │                       ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                                                                            │       │                       │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader" } ]
                                                                            │       │                       ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │       │                       │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader",   "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }] } ]
                                                                            │       │                       └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
                                                                            │       │                           └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
                                                                            │       │                               └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader",   "queryAllPublicConstructors":true } ]
                                                                            │       └── org.springframework.boot.context.config.ConfigDataEnvironment#processAndApply()
                                                                            │           └── org.springframework.boot.context.config.ConfigDataEnvironment#processWithProfiles(org.springframework.boot.context.config.ConfigDataEnvironmentContributors,org.springframework.boot.context.config.ConfigDataImporter,org.springframework.boot.context.config.ConfigDataActivationContext)
                                                                            │               └── org.springframework.boot.context.config.ConfigDataEnvironmentContributors#withProcessedImports(org.springframework.boot.context.config.ConfigDataImporter,org.springframework.boot.context.config.ConfigDataActivationContext)
                                                                            │                   └── org.springframework.boot.context.config.ConfigDataImporter#resolveAndLoad(org.springframework.boot.context.config.ConfigDataActivationContext,org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLoaderContext,java.util.List)
                                                                            │                       ├── org.springframework.boot.context.config.ConfigDataImporter#resolve(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.Profiles,java.util.List)
                                                                            │                       │   └── org.springframework.boot.context.config.ConfigDataImporter#resolve(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.Profiles,org.springframework.boot.context.config.ConfigDataLocation)
                                                                            │                       │       └── org.springframework.boot.context.config.ConfigDataLocationResolvers#resolve(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.Profiles)
                                                                            │                       │           └── org.springframework.boot.context.config.ConfigDataLocationResolvers#resolve(org.springframework.boot.context.config.ConfigDataLocationResolver,org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.Profiles)
                                                                            │                       │               └── org.springframework.boot.context.config.ConfigDataLocationResolvers#resolve(org.springframework.boot.context.config.ConfigDataLocation,boolean,java.util.function.Supplier)
                                                                            │                       │                   └── org.springframework.boot.context.config.ConfigDataLocationResolvers$$Lambda$207/0x0000000800d3bde0#get()
                                                                            │                       │                       └── org.springframework.boot.context.config.ConfigDataLocationResolvers#lambda$resolve$2(org.springframework.boot.context.config.ConfigDataLocationResolver,org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.Profiles)
                                                                            │                       │                           └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver#resolveProfileSpecific(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.Profiles)
                                                                            │                       │                               └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver#loadProperties(org.springframework.boot.context.config.ConfigDataLocationResolverContext)
                                                                            │                       │                                   ├── org.springframework.boot.context.properties.bind.Binder#bind(java.lang.String,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                                                                            │                       │                                   │   └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                                                                            │                       │                                   │       └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,boolean)
                                                                            │                       │                                   │           └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                   │               └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                   └── org.springframework.boot.context.properties.bind.Binder#bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                       └── org.springframework.boot.context.properties.bind.Binder$Context#withDataObject(java.lang.Class,java.util.function.Supplier)
                                                                            │                       │                                   │                           └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                   │                               └── org.springframework.boot.context.properties.bind.Binder$$Lambda$117/0x0000000800cb79f8#get()
                                                                            │                       │                                   │                                   └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$5(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                       ├── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                       │   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#get(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                   │                                       │   │   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#<init>(org.springframework.core.ResolvableType,java.lang.Class)
                                                                            │                       │                                   │                                       │   │   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#addProperties(java.lang.Class)
                                                                            │                       │                                   │                                       │   │   │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getSorted(java.lang.Object,java.util.function.Function,java.util.function.Function)
                                                                            │                       │                                   │                                       │   │   │           ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$123/0x0000000800cbd2f0#apply(java.lang.Object)
                                                                            │                       │                                   │                                       │   │   │           │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getDeclaredMethods(java.lang.Class)
                                                                            │                       │                                   │                                       │   │   │           │       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredMethods":true } ]
                                                                            │                       │                                   │                                       │   │   │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$125/0x0000000800cbd968#apply(java.lang.Object)
                                                                            │                       │                                   │                                       │   │   │               └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "allDeclaredFields":true } ]
                                                                            │                       │                                   │                                       │   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#isInstantiable(java.lang.Class)
                                                                            │                       │                                   │                                       │   │       └── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                   │                                       │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                   │                                       │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty)
                                                                            │                       │                                   │                                       │           └── org.springframework.boot.context.properties.bind.Binder$$Lambda$116/0x0000000800cb77d8#bindProperty(java.lang.String,org.springframework.boot.context.properties.bind.Bindable)
                                                                            │                       │                                   │                                       │               └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$4(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,java.lang.String,org.springframework.boot.context.properties.bind.Bindable)
                                                                            │                       │                                   │                                       │                   └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                   │                                       │                       └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                                       │                           └── org.springframework.boot.context.properties.bind.Binder#bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.AggregateBinder)
                                                                            │                       │                                   │                                       │                               └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                   │                                       │                                   └── org.springframework.boot.context.properties.bind.Binder$$Lambda$145/0x0000000800d06fa0#get()
                                                                            │                       │                                   │                                       │                                       └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$3(org.springframework.boot.context.properties.bind.AggregateBinder,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                   │                                       │                                           └── org.springframework.boot.context.properties.bind.AggregateBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                   │                                       │                                               └── org.springframework.boot.context.properties.bind.CollectionBinder#bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                   │                                       │                                                   └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier)
                                                                            │                       │                                   │                                       │                                                       └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType)
                                                                            │                       │                                   │                                       │                                                           └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType)
                                                                            │                       │                                   │                                       │                                                               └── org.springframework.boot.context.properties.bind.Binder$$Lambda$144/0x0000000800d06d70#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.source.ConfigurationPropertySource)
                                                                            │                       │                                   │                                       │                                                                   └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$2(org.springframework.boot.context.properties.bind.AggregateBinder,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.source.ConfigurationPropertySource)
                                                                            │                       │                                   │                                       │                                                                       └── org.springframework.boot.context.properties.bind.Binder$Context#withSource(org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.util.function.Supplier)
                                                                            │                       │                                   │                                       │                                                                           └── org.springframework.boot.context.properties.bind.Binder$$Lambda$152/0x0000000800d05350#get()
                                                                            │                       │                                   │                                       │                                                                               └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$1(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                                       │                                                                                   └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                   │                                       │                                                                                       └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                                       │                                                                                           └── org.springframework.boot.context.properties.bind.Binder#bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                   │                                       │                                                                                               └── org.springframework.boot.context.properties.bind.Binder$Context#withDataObject(java.lang.Class,java.util.function.Supplier)
                                                                            │                       │                                   │                                       │                                                                                                   └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                   │                                       │                                                                                                       └── org.springframework.boot.context.properties.bind.Binder$$Lambda$117/0x0000000800cb79f8#get()
                                                                            │                       │                                   │                                       │                                                                                                           └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$5(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                       │                                                                                                               ├── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                       │                                                                                                               │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#get(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                   │                                       │                                                                                                               │       ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#<init>(org.springframework.core.ResolvableType,java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                               │       │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#addProperties(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                               │       │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getSorted(java.lang.Object,java.util.function.Function,java.util.function.Function)
                                                                            │                       │                                   │                                       │                                                                                                               │       │           ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$123/0x0000000800cbd2f0#apply(java.lang.Object)
                                                                            │                       │                                   │                                       │                                                                                                               │       │           │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getDeclaredMethods(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                               │       │           │       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredMethods":true } ]
                                                                            │                       │                                   │                                       │                                                                                                               │       │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$125/0x0000000800cbd968#apply(java.lang.Object)
                                                                            │                       │                                   │                                       │                                                                                                               │       │               └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "allDeclaredFields":true } ]
                                                                            │                       │                                   │                                       │                                                                                                               │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#isInstantiable(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                               │           └── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                   │                                       │                                                                                                               └── org.springframework.boot.context.properties.bind.ValueObjectBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                       │                                                                                                                   └── org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject#get(org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                   │                                       │                                                                                                                       └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                   │                                       │                                                                                                                           └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(java.lang.Class,boolean)
                                                                            │                       │                                   │                                       │                                                                                                                               └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getConstructors(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                                                   ├── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getCandidateConstructors(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                                                   │   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                   │                                       │                                                                                                                                   └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#isAutowiredPresent(java.lang.Class)
                                                                            │                       │                                   │                                       │                                                                                                                                       └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                   │                                       └── org.springframework.boot.context.properties.bind.ValueObjectBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                   │                                           └── org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject#get(org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                   │                                               └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                   │                                                   └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(java.lang.Class,boolean)
                                                                            │                       │                                   │                                                       └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getConstructors(java.lang.Class)
                                                                            │                       │                                   │                                                           ├── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getCandidateConstructors(java.lang.Class)
                                                                            │                       │                                   │                                                           │   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                   │                                                           └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#isAutowiredPresent(java.lang.Class)
                                                                            │                       │                                   │                                                               └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                   └── org.springframework.boot.context.properties.bind.BindResult#orElseGet(java.util.function.Supplier)
                                                                            │                       │                                       └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver$$Lambda$213/0x0000000800d40688#get()
                                                                            │                       │                                           └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLocationResolver#lambda$loadProperties$1(org.springframework.boot.context.properties.bind.Binder,org.springframework.boot.context.properties.bind.BindHandler)
                                                                            │                       │                                               └── org.springframework.boot.context.properties.bind.Binder#bind(java.lang.String,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                                                                            │                       │                                                   └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler)
                                                                            │                       │                                                       └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,boolean)
                                                                            │                       │                                                           └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                                               └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                   └── org.springframework.boot.context.properties.bind.Binder#bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                       └── org.springframework.boot.context.properties.bind.Binder$Context#withDataObject(java.lang.Class,java.util.function.Supplier)
                                                                            │                       │                                                                           └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                                                               └── org.springframework.boot.context.properties.bind.Binder$$Lambda$117/0x0000000800cb79f8#get()
                                                                            │                       │                                                                                   └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$5(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                       ├── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                       │   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#get(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                                                                       │   │   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#<init>(org.springframework.core.ResolvableType,java.lang.Class)
                                                                            │                       │                                                                                       │   │   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#addProperties(java.lang.Class)
                                                                            │                       │                                                                                       │   │   │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getSorted(java.lang.Object,java.util.function.Function,java.util.function.Function)
                                                                            │                       │                                                                                       │   │   │           ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$123/0x0000000800cbd2f0#apply(java.lang.Object)
                                                                            │                       │                                                                                       │   │   │           │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getDeclaredMethods(java.lang.Class)
                                                                            │                       │                                                                                       │   │   │           │       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredMethods":true } ]
                                                                            │                       │                                                                                       │   │   │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$125/0x0000000800cbd968#apply(java.lang.Object)
                                                                            │                       │                                                                                       │   │   │               └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "allDeclaredFields":true } ]
                                                                            │                       │                                                                                       │   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#isInstantiable(java.lang.Class)
                                                                            │                       │                                                                                       │   │       └── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                                                                       │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                                                                       │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder,org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty)
                                                                            │                       │                                                                                       │           ├── org.springframework.boot.context.properties.bind.Binder$$Lambda$116/0x0000000800cb77d8#bindProperty(java.lang.String,org.springframework.boot.context.properties.bind.Bindable)
                                                                            │                       │                                                                                       │           │   └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$4(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,java.lang.String,org.springframework.boot.context.properties.bind.Bindable)
                                                                            │                       │                                                                                       │           │       └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                                                                       │           │           └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                                       │           │               └── org.springframework.boot.context.properties.bind.Binder#bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.AggregateBinder)
                                                                            │                       │                                                                                       │           │                   └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                                                                       │           │                       └── org.springframework.boot.context.properties.bind.Binder$$Lambda$145/0x0000000800d06fa0#get()
                                                                            │                       │                                                                                       │           │                           └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$3(org.springframework.boot.context.properties.bind.AggregateBinder,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                                                                       │           │                               └── org.springframework.boot.context.properties.bind.AggregateBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                                                                       │           │                                   └── org.springframework.boot.context.properties.bind.CollectionBinder#bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder)
                                                                            │                       │                                                                                       │           │                                       └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier)
                                                                            │                       │                                                                                       │           │                                           └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType)
                                                                            │                       │                                                                                       │           │                                               └── org.springframework.boot.context.properties.bind.IndexedElementsBinder#bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType)
                                                                            │                       │                                                                                       │           │                                                   └── org.springframework.boot.context.properties.bind.Binder$$Lambda$144/0x0000000800d06d70#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.source.ConfigurationPropertySource)
                                                                            │                       │                                                                                       │           │                                                       └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$2(org.springframework.boot.context.properties.bind.AggregateBinder,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.source.ConfigurationPropertySource)
                                                                            │                       │                                                                                       │           │                                                           └── org.springframework.boot.context.properties.bind.Binder$Context#withSource(org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.util.function.Supplier)
                                                                            │                       │                                                                                       │           │                                                               └── org.springframework.boot.context.properties.bind.Binder$$Lambda$152/0x0000000800d05350#get()
                                                                            │                       │                                                                                       │           │                                                                   └── org.springframework.boot.context.properties.bind.Binder#lambda$bindAggregate$1(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                                       │           │                                                                       └── org.springframework.boot.context.properties.bind.Binder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean,boolean)
                                                                            │                       │                                                                                       │           │                                                                           └── org.springframework.boot.context.properties.bind.Binder#bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                                       │           │                                                                               └── org.springframework.boot.context.properties.bind.Binder#bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder$Context,boolean)
                                                                            │                       │                                                                                       │           │                                                                                   └── org.springframework.boot.context.properties.bind.Binder$Context#withDataObject(java.lang.Class,java.util.function.Supplier)
                                                                            │                       │                                                                                       │           │                                                                                       └── org.springframework.boot.context.properties.bind.Binder$Context#withIncreasedDepth(java.util.function.Supplier)
                                                                            │                       │                                                                                       │           │                                                                                           └── org.springframework.boot.context.properties.bind.Binder$$Lambda$117/0x0000000800cb79f8#get()
                                                                            │                       │                                                                                       │           │                                                                                               └── org.springframework.boot.context.properties.bind.Binder#lambda$bindDataObject$5(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                       │           │                                                                                                   ├── org.springframework.boot.context.properties.bind.JavaBeanBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                       │           │                                                                                                   │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#get(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                                                                       │           │                                                                                                   │       ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#<init>(org.springframework.core.ResolvableType,java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#addProperties(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getSorted(java.lang.Object,java.util.function.Function,java.util.function.Function)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │           ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$123/0x0000000800cbd2f0#apply(java.lang.Object)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │           │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#getDeclaredMethods(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │           │       └── java.lang.Class#getDeclaredMethods() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredMethods":true } ]
                                                                            │                       │                                                                                       │           │                                                                                                   │       │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$125/0x0000000800cbd968#apply(java.lang.Object)
                                                                            │                       │                                                                                       │           │                                                                                                   │       │               └── java.lang.Class#getDeclaredFields() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "allDeclaredFields":true } ]
                                                                            │                       │                                                                                       │           │                                                                                                   │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#isInstantiable(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                   │           └── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                                                                       │           │                                                                                                   └── org.springframework.boot.context.properties.bind.ValueObjectBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                       │           │                                                                                                       └── org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject#get(org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                                                                       │           │                                                                                                           └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                                                                       │           │                                                                                                               └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(java.lang.Class,boolean)
                                                                            │                       │                                                                                       │           │                                                                                                                   └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getConstructors(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                                       ├── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getCandidateConstructors(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                                       │   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                                                                       │           │                                                                                                                       └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#isAutowiredPresent(java.lang.Class)
                                                                            │                       │                                                                                       │           │                                                                                                                           └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties$Config",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                                                                       │           └── org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanProperty#setValue(java.util.function.Supplier,java.lang.Object)
                                                                            │                       │                                                                                       │               ├── org.springframework.boot.context.properties.bind.JavaBeanBinder$BeanSupplier#get()
                                                                            │                       │                                                                                       │               │   └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean$$Lambda$131/0x0000000800cbed08#get()
                                                                            │                       │                                                                                       │               │       └── org.springframework.boot.context.properties.bind.JavaBeanBinder$Bean#lambda$getSupplier$0(org.springframework.boot.context.properties.bind.Bindable)
                                                                            │                       │                                                                                       │               │           └── org.springframework.beans.BeanUtils#instantiateClass(java.lang.Class)
                                                                            │                       │                                                                                       │               │               ├── java.lang.Class#getDeclaredConstructor(java.lang.Class[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                                                                       │               │               └── org.springframework.beans.BeanUtils#instantiateClass(java.lang.reflect.Constructor,java.lang.Object[])
                                                                            │                       │                                                                                       │               │                   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                       │                                                                                       │               └── java.lang.reflect.Method#invoke(java.lang.Object,java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "methods":[{"name":"setServerAddr","parameterTypes":["java.lang.String"] }] } ]
                                                                            │                       │                                                                                       └── org.springframework.boot.context.properties.bind.ValueObjectBinder#bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)
                                                                            │                       │                                                                                           └── org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject#get(org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context)
                                                                            │                       │                                                                                               └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(org.springframework.boot.context.properties.bind.Bindable,boolean)
                                                                            │                       │                                                                                                   └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider#getBindConstructor(java.lang.Class,boolean)
                                                                            │                       │                                                                                                       └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getConstructors(java.lang.Class)
                                                                            │                       │                                                                                                           ├── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#getCandidateConstructors(java.lang.Class)
                                                                            │                       │                                                                                                           │   └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       │                                                                                                           └── org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider$Constructors#isAutowiredPresent(java.lang.Class)
                                                                            │                       │                                                                                                               └── java.lang.Class#getDeclaredConstructors() - [ {   "name":"com.alibaba.cloud.nacos.NacosConfigProperties",   "queryAllDeclaredConstructors":true } ]
                                                                            │                       └── org.springframework.boot.context.config.ConfigDataImporter#load(org.springframework.boot.context.config.ConfigDataLoaderContext,java.util.List)
                                                                            │                           └── org.springframework.boot.context.config.ConfigDataLoaders#load(org.springframework.boot.context.config.ConfigDataLoaderContext,org.springframework.boot.context.config.ConfigDataResource)
                                                                            │                               └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader#load(org.springframework.boot.context.config.ConfigDataLoaderContext,org.springframework.boot.context.config.ConfigDataResource)
                                                                            │                                   └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader#load(org.springframework.boot.context.config.ConfigDataLoaderContext,com.alibaba.cloud.nacos.configdata.NacosConfigDataResource)
                                                                            │                                       └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader#doLoad(org.springframework.boot.context.config.ConfigDataLoaderContext,com.alibaba.cloud.nacos.configdata.NacosConfigDataResource)
                                                                            │                                           └── com.alibaba.cloud.nacos.configdata.NacosConfigDataLoader#pullConfig(com.alibaba.nacos.api.config.ConfigService,java.lang.String,java.lang.String,java.lang.String,long)
                                                                            │                                               └── com.alibaba.cloud.nacos.parser.NacosDataParserHandler#getInstance()
                                                                            │                                                   └── com.alibaba.cloud.nacos.parser.NacosDataParserHandler$ParserHandler#<clinit>()
                                                                            │                                                       └── com.alibaba.cloud.nacos.parser.NacosDataParserHandler#<init>()
                                                                            │                                                           └── org.springframework.core.io.support.SpringFactoriesLoader#loadFactories(java.lang.Class,java.lang.ClassLoader)
                                                                            │                                                               └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class)
                                                                            │                                                                   └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │                                                                       └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                            │                                                                           ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                                                                            │                                                                           │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader" }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader" } ]
                                                                            │                                                                           ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                            │                                                                           │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader",   "methods":[{"name":"<init>","parameterTypes":[] }] }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                            │                                                                           └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
                                                                            │                                                                               └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
                                                                            │                                                                                   └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.parser.NacosJsonPropertySourceLoader",   "queryAllPublicConstructors":true }, {   "name":"com.alibaba.cloud.nacos.parser.NacosXmlPropertySourceLoader",   "queryAllPublicConstructors":true } ]
                                                                            └── org.springframework.boot.env.EnvironmentPostProcessorApplicationListener#getEnvironmentPostProcessors(org.springframework.core.io.ResourceLoader,org.springframework.boot.ConfigurableBootstrapContext)
                                                                                └── org.springframework.boot.env.SpringFactoriesEnvironmentPostProcessorsFactory#getEnvironmentPostProcessors(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext)
                                                                                    └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                                        └── org.springframework.core.io.support.SpringFactoriesLoader#load(java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                                            └── org.springframework.core.io.support.SpringFactoriesLoader#instantiateFactory(java.lang.String,java.lang.Class,org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver,org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler)
                                                                                                ├── org.springframework.util.ClassUtils#forName(java.lang.String,java.lang.ClassLoader)
                                                                                                │   └── java.lang.Class#forName(java.lang.String,boolean,java.lang.ClassLoader) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataMissingEnvironmentPostProcessor" } ]
                                                                                                ├── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#instantiate(org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver)
                                                                                                │   └── java.lang.reflect.Constructor#newInstance(java.lang.Object[]) - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataMissingEnvironmentPostProcessor",   "methods":[{"name":"<init>","parameterTypes":[] }] } ]
                                                                                                └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#forClass(java.lang.Class)
                                                                                                    └── org.springframework.core.io.support.SpringFactoriesLoader$FactoryInstantiator#findConstructor(java.lang.Class)
                                                                                                        └── java.lang.Class#getConstructors() - [ {   "name":"com.alibaba.cloud.nacos.configdata.NacosConfigDataMissingEnvironmentPostProcessor",   "queryAllPublicConstructors":true } ]

